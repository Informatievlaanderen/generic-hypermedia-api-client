{"version":3,"sources":["../src/index.js"],"names":["languagePriorityList","basicFilter","extendedFilter","lookup","WILDCARD","DEFAULT_WILDCARD","tag","quality","isType","data","type","Object","prototype","toString","call","isObject","v","isString","specificitySort","a","b","length","tagSort","tagEquality","toLowerCase","prefixInTag","range","indexOf","isWild","isWildTag","qtyMatch","gteQty","rangeSort","filterTags","rangeTags","index","array","languagesTagsComparator","splitRangeTags","split","extractTag","rangeTag","ensureParsedValue","extractQuality","q","parseFloat","matches","match","undefined","join","map","filter","sort","languageTags","Array","isArray","list","push","extendedTagMatch","rangeSubTags","languageSubTags","rIndex","lIndex","defaultValue","arguments","Error","sortedLangTags","matchTag","langTags","directTagMatch","priorityList","directMatch"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * accept-language-negotiator\n * Copyright(c) 2016 Jason Glen Jacob\n * MIT Licensed\n */\nconst WILDCARD = '*';\nconst DEFAULT_WILDCARD = [{tag: WILDCARD, quality: 1}];\nconst isType = (data, type) => Object.prototype.toString.call(data) === `[object ${type}]`;\nconst isObject = (v) => isType(v, 'Object');\nconst isString = (v) => isType(v, 'String');\nconst specificitySort = (a, b) => (a.length < b.length);\nconst tagSort = (a, b) => specificitySort(a.tag, b.tag);\nconst tagEquality = (a, b) => a.toLowerCase() === b.toLowerCase();\nconst prefixInTag = (range, tag) => tag.toLowerCase().indexOf(`${range}-`.toLowerCase()) !== -1;\nconst isWild = (v) => (v === WILDCARD);\nconst isWildTag = (v) => v.tag === WILDCARD;\nconst qtyMatch = (a, b) => (a.quality === b.quality);\nconst gteQty = (a, b) => (a.quality > b.quality);\nconst rangeSort = (a, b) => ~~((isWildTag(b) || gteQty(b, a)) || (!isWildTag(a) && qtyMatch(a, b) && tagSort(a, b)));\n\n/**\n * Filters range tags that matches in the languagesTagsComparator\n *\n * @param {Array} rangeTags Range tags to work through\n * @param {Number} index Current index of rangeTags\n * @param {Array} array Filter tags are appended to array\n * @param {Function} languagesTagsComparator Compares range tags to language tags\n * @param {Boolean} splitRangeTags Whether to split range tags for comparison\n * @return {Array} The filtered range - language tags.\n */\nfunction filterTags(rangeTags, index, array, languagesTagsComparator, splitRangeTags) {\n  if (!rangeTags[index]) return array;\n  languagesTagsComparator((splitRangeTags ? rangeTags[index].tag.split('-') : rangeTags[index].tag), 0, array);\n  return filterTags(rangeTags, ++index, array, languagesTagsComparator, splitRangeTags);\n}\n\n/**\n * Parse a range to form a \"quality weights\" list.\n *\n * @param {String} range A range string to languagePriorityList\n * @return {Array<Object>} A Language Priority List\n */\nexport function languagePriorityList(range) {\n  function extractTag(rangeTag) {\n    const ensureParsedValue = (v) => (v < 1 ? v : 1);\n    const extractQuality = (q) => (q ? ensureParsedValue(parseFloat(q.split('q=')[1])) : 1);\n    const matches = rangeTag.match(/^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/);\n    if (!matches) return undefined;\n    return {tag: (matches[2] ? [matches[1], matches[2]].join('-') : matches[1]), quality: extractQuality(matches[3])};\n  }\n\n  return isString(range) ? range.split(',').map(extractTag).filter(isObject).sort(rangeSort) : DEFAULT_WILDCARD;\n}\n\n/**\n * Basic Filter as described in RFC4647 3.3.1 produces a (potentially empty) set of prioritised language tags\n *\n * RFC4647 3.3.1  Basic Filtering\n *\n * @param {String} range A range string to languagePriorityList\n * @param {Array} languageTags A list of bcp47 locales that are supported\n * @return {Array<String>} returns tags from supportedLanguagesTags that match or all tags if wildcard '*' is given\n */\nexport function basicFilter(range, languageTags) {\n  if (!Array.isArray(languageTags)) return [];\n  const list = languagePriorityList(range);\n  if (list.length > 0 && isWildTag(list[0])) return languageTags; // RFC4647 wildcard matches all\n\n  function languagesTagsComparator(tag, index, array) {\n    if (!languageTags[index]) return array;\n    if (tagEquality(tag, languageTags[index]) || prefixInTag(tag, languageTags[index])) {\n      if (array.indexOf(languageTags[index]) === -1) array.push(languageTags[index]);\n    }\n    return languagesTagsComparator(tag, ++index, array);\n  }\n\n  return filterTags(list, 0, [], languagesTagsComparator, false);\n}\n\n/**\n * Extended Filter as described in RFC4647 3.3.2 produces a (potentially empty) set of prioritised language tags\n *\n * @param {String} range A range string to languagePriorityList\n * @param {Array} languageTags A list of bcp47 locales that are supported\n * @return {Array<String>} returns tags from supportedLanguagesTags that match or all tags if wildcard '*' is given\n */\nexport function extendedFilter(range, languageTags) {\n  if (!Array.isArray(languageTags) || languageTags.length === 0) return [];\n\n  function extendedTagMatch(rangeSubTags, languageSubTags, rIndex, lIndex) {\n    if (!rangeSubTags[rIndex]) return true;\n    if (!languageSubTags[lIndex] || languageSubTags[lIndex].length === 1) return false;\n    if (isWild(rangeSubTags[rIndex])) ++rIndex;\n    if (tagEquality(rangeSubTags[rIndex], languageSubTags[lIndex])) ++rIndex;\n    return extendedTagMatch(rangeSubTags, languageSubTags, rIndex, ++lIndex);\n  }\n\n  function languagesTagsComparator(rangeSubTags, index, array) {\n    if (!languageTags[index]) return array;\n    if (extendedTagMatch(rangeSubTags, languageTags[index].split('-'), 0, 0)) array.push(languageTags[index]);\n    return languagesTagsComparator(rangeSubTags, ++index, array);\n  }\n\n  return filterTags(languagePriorityList(range), 0, [], languagesTagsComparator, true);\n}\n\n/**\n * Lookup produces a single language tag (RFC4647)\n * @param {String} range A range string to languagePriorityList.\n * @param {Array} languageTags A list of bcp47 locales that are supported\n * @param {String} defaultValue The default to return if no match can be made\n * @return {String} returns an array of objects or wildcard if input is not valid (RFC2616)\n */\nexport function lookup(range, languageTags, defaultValue) {\n  if (arguments.length !== 3) throw new Error('range:String, languageTags:Array, defaultValue:String required!');\n  if (!Array.isArray(languageTags) || languageTags.length === 0) return defaultValue;\n  const sortedLangTags = languageTags.sort(specificitySort);\n\n  function matchTag(rangeTags, langTags, index, array) {\n    if (index >= langTags.length || index >= rangeTags.length) return array;\n    if (rangeTags[index].length !== 1) {\n      if (!tagEquality(rangeTags[index], langTags[index])) return array;\n      array.push(rangeTags[index]);\n    }\n    return matchTag(rangeTags, langTags, ++index, array);\n  }\n\n  function directTagMatch(tag, index, array) {\n    if (!languageTags[index]) return array;\n    if (tagEquality(tag, languageTags[index])) {\n      if (array.indexOf(languageTags[index]) === -1) array.push(languageTags[index]);\n    }\n    return directTagMatch(tag, ++index, array);\n  }\n\n  function languagesTagsComparator(tag, index, array) {\n    if (!sortedLangTags[index]) return array;\n    const matches = matchTag(tag.split('-'), sortedLangTags[index].split('-'), 0, []).join('-');\n    if (matches && array.indexOf(matches) === -1) array.push(matches);\n    return languagesTagsComparator(tag, ++index, array);\n  }\n\n  const priorityList = languagePriorityList(range);\n  const directMatch = filterTags(priorityList, 0, [], directTagMatch, false)[0];\n  return directMatch || filterTags(priorityList, 0, [], languagesTagsComparator, false)[0] || defaultValue;\n}\n"]}